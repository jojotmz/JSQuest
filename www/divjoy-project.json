{
  "data": [
    {
      "type": "instance",
      "subtype": "app-instance",
      "componentId": "app",
      "id": 4010090,
      "isVisible": true,
      "children": []
    }
  ],
  "components": [
    {
      "type": "component",
      "name": "PageLoader",
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "id": 1438625,
          "name": "Wrapper",
          "style": "height: 400px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n.loader {\n  height: 2rem;\n\twidth: 2rem;\n}",
          "children": [
            {
              "type": "if",
              "js": "!props.children",
              "id": 3200471,
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "id": 4398804,
                  "classNames": [
                    "loader",
                    "is-loading"
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "children": [],
                  "propsArray": []
                }
              ],
              "isVisible": true
            },
            {
              "type": "if",
              "js": "props.children",
              "id": 9543120,
              "children": [
                {
                  "type": "children",
                  "id": 6864576,
                  "isVisible": true,
                  "children": []
                }
              ],
              "isVisible": true
            }
          ],
          "attributes": "{\n\t...otherProps\n}",
          "isVisible": true,
          "image": "",
          "classNames": [],
          "classNameExpressions": [],
          "propsArray": [
            {
              "key": null,
              "value": "otherProps",
              "isString": false,
              "type": "SpreadElement"
            }
          ]
        }
      ],
      "id": 9205860,
      "code": "\tconst { children, ...otherProps } = props;\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "PageLoader",
      "nameStyleModule": "PageLoader",
      "modulePath": "src/components/PageLoader"
    },
    {
      "type": "component",
      "name": "Navbar",
      "id": 9215568,
      "children": [
        {
          "type": "instance",
          "componentId": 3871614,
          "attributes": "{\n\tspaced: props.spaced,\n  color: props.color\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "navbar-brand"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "navbar-item"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "a",
                          "attributes": "{\n  href: '/' \n}",
                          "children": [
                            {
                              "type": "element",
                              "tagName": "img",
                              "attributes": "{\n  src: props.logo,\n  alt: \"Logo\"\n}",
                              "classNames": [
                                "image"
                              ],
                              "id": 6799068,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": [
                                {
                                  "key": "src",
                                  "value": "props.logo",
                                  "isString": false,
                                  "type": "MemberExpression"
                                },
                                {
                                  "key": "alt",
                                  "value": "Logo",
                                  "isString": true,
                                  "type": "StringLiteral"
                                }
                              ]
                            }
                          ],
                          "id": 2503295,
                          "isVisible": true,
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": [
                            {
                              "key": "href",
                              "value": "/",
                              "isString": true,
                              "type": "StringLiteral"
                            }
                          ]
                        }
                      ],
                      "id": 1945490,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "span",
                          "id": 4597590,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": []
                        },
                        {
                          "type": "element",
                          "tagName": "span",
                          "id": 3843238,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": []
                        },
                        {
                          "type": "element",
                          "tagName": "span",
                          "id": 5574078,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": []
                        }
                      ],
                      "classNames": [
                        "navbar-burger",
                        "burger"
                      ],
                      "attributes": "{\n  onClick: () => setMenuOpen(!menuOpen)\n}",
                      "classNameExpressions": [
                        {
                          "js": "menuOpen",
                          "classNames": [
                            "is-active"
                          ]
                        }
                      ],
                      "id": 3211285,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "style": "",
                      "propsArray": [
                        {
                          "key": "onClick",
                          "value": "() => setMenuOpen(!menuOpen)",
                          "isString": false,
                          "type": "ArrowFunctionExpression"
                        }
                      ]
                    }
                  ],
                  "id": 1224919,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "navbar-menu"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "navbar-end"
                      ],
                      "children": [
                        {
                          "type": "if",
                          "js": "auth.user",
                          "children": [
                            {
                              "type": "element",
                              "tagName": "div",
                              "classNames": [
                                "navbar-item",
                                "has-dropdown",
                                "is-hoverable"
                              ],
                              "children": [
                                {
                                  "type": "element",
                                  "tagName": "a",
                                  "attributes": "{\n  href: '/' \n}",
                                  "children": [
                                    {
                                      "type": "text",
                                      "text": "Account",
                                      "id": 6169912,
                                      "isVisible": true,
                                      "children": []
                                    }
                                  ],
                                  "classNames": [
                                    "navbar-link"
                                  ],
                                  "id": 9738087,
                                  "isVisible": true,
                                  "image": "",
                                  "name": "",
                                  "classNameExpressions": [],
                                  "style": "",
                                  "propsArray": [
                                    {
                                      "key": "href",
                                      "value": "/",
                                      "isString": true,
                                      "type": "StringLiteral"
                                    }
                                  ]
                                },
                                {
                                  "type": "element",
                                  "tagName": "div",
                                  "classNames": [
                                    "navbar-dropdown",
                                    "is-boxed"
                                  ],
                                  "children": [
                                    {
                                      "type": "element",
                                      "tagName": "a",
                                      "attributes": "{\n  href: '/dashboard'\n}",
                                      "children": [
                                        {
                                          "type": "text",
                                          "text": "Dashboard",
                                          "id": 3627591,
                                          "isVisible": true,
                                          "children": []
                                        }
                                      ],
                                      "classNames": [
                                        "navbar-item"
                                      ],
                                      "id": 798663,
                                      "isVisible": true,
                                      "image": "",
                                      "name": "",
                                      "classNameExpressions": [],
                                      "style": "",
                                      "propsArray": [
                                        {
                                          "key": "href",
                                          "value": "/dashboard",
                                          "isString": true,
                                          "type": "StringLiteral"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "element",
                                      "tagName": "a",
                                      "attributes": "{\n  href: '/settings/general'\n}",
                                      "children": [
                                        {
                                          "type": "text",
                                          "text": "Settings",
                                          "id": 5098892,
                                          "isVisible": true,
                                          "children": []
                                        }
                                      ],
                                      "classNames": [
                                        "navbar-item"
                                      ],
                                      "id": 2586971,
                                      "isVisible": true,
                                      "image": "",
                                      "name": "",
                                      "classNameExpressions": [],
                                      "style": "",
                                      "propsArray": [
                                        {
                                          "key": "href",
                                          "value": "/settings/general",
                                          "isString": true,
                                          "type": "StringLiteral"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "element",
                                      "tagName": "hr",
                                      "classNames": [
                                        "dropdown-divider"
                                      ],
                                      "id": 2167300,
                                      "isVisible": true,
                                      "attributes": "{\n\n}",
                                      "image": "",
                                      "name": "",
                                      "classNameExpressions": [],
                                      "style": "",
                                      "children": [],
                                      "propsArray": []
                                    },
                                    {
                                      "type": "element",
                                      "tagName": "a",
                                      "attributes": "{\n  href: \"/auth/signout\",\n  onClick: (e) => {\n    e.preventDefault();\n    auth.signout();\n  }\n}",
                                      "children": [
                                        {
                                          "type": "text",
                                          "text": "Sign out",
                                          "id": 5949729,
                                          "isVisible": true,
                                          "children": []
                                        }
                                      ],
                                      "classNames": [
                                        "navbar-item"
                                      ],
                                      "id": 8221397,
                                      "isVisible": true,
                                      "image": "",
                                      "name": "",
                                      "classNameExpressions": [],
                                      "style": "",
                                      "propsArray": [
                                        {
                                          "key": "href",
                                          "value": "/auth/signout",
                                          "isString": true,
                                          "type": "StringLiteral"
                                        },
                                        {
                                          "key": "onClick",
                                          "value": "(e) => {\n  e.preventDefault();\n  auth.signout();\n}",
                                          "isString": false,
                                          "type": "ArrowFunctionExpression"
                                        }
                                      ]
                                    }
                                  ],
                                  "id": 3892263,
                                  "isVisible": true,
                                  "attributes": "{\n\n}",
                                  "image": "",
                                  "name": "",
                                  "classNameExpressions": [],
                                  "style": "",
                                  "propsArray": []
                                }
                              ],
                              "id": 2746102,
                              "isVisible": true,
                              "attributes": "{\n\n}",
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "propsArray": []
                            }
                          ],
                          "id": 3173739,
                          "isVisible": true
                        },
                        {
                          "type": "if",
                          "js": "!auth.user",
                          "children": [
                            {
                              "type": "element",
                              "tagName": "a",
                              "attributes": "{\n  href: '/auth/signin'\n}",
                              "children": [
                                {
                                  "type": "text",
                                  "text": "Sign in",
                                  "id": 7986864,
                                  "isVisible": true,
                                  "children": []
                                }
                              ],
                              "classNames": [
                                "navbar-item"
                              ],
                              "id": 5577253,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "propsArray": [
                                {
                                  "key": "href",
                                  "value": "/auth/signin",
                                  "isString": true,
                                  "type": "StringLiteral"
                                }
                              ]
                            }
                          ],
                          "id": 6673849,
                          "isVisible": true
                        }
                      ],
                      "id": 916218,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "classNameExpressions": [
                    {
                      "js": "menuOpen",
                      "classNames": [
                        "is-active"
                      ]
                    }
                  ],
                  "id": 753773,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 9875662,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "id": 1027311,
          "isVisible": true,
          "propsArray": [
            {
              "key": "spaced",
              "value": "props.spaced",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "code": "\tconst auth = useAuth();  \n\tconst [menuOpen, setMenuOpen] = useState(false);\n  \n    ",
      "tags": [
        "Navigation"
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "nameFormatted": "Navbar",
      "nameStyleModule": "NavbarComponent",
      "modulePath": "src/components/Navbar"
    },
    {
      "type": "component",
      "name": "Navbar Container",
      "id": 3871614,
      "children": [
        {
          "type": "element",
          "tagName": "nav",
          "classNames": [
            "navbar"
          ],
          "children": [
            {
              "type": "children",
              "id": 3170614,
              "isVisible": true,
              "children": []
            }
          ],
          "classNameExpressions": [
            {
              "js": "color",
              "classNames": [
                "is-{color}"
              ]
            },
            {
              "js": "spaced",
              "classNames": [
                "is-spaced"
              ]
            },
            {
              "js": "className",
              "classNames": [
                "{className}"
              ]
            }
          ],
          "id": 6664260,
          "attributes": "{\n\t...otherProps\n}",
          "isVisible": true,
          "image": "",
          "name": "",
          "style": "",
          "propsArray": [
            {
              "key": null,
              "value": "otherProps",
              "isString": false,
              "type": "SpreadElement"
            }
          ]
        }
      ],
      "code": "\tconst { color, spaced, className, ...otherProps } = props;\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "NavbarContainer",
      "nameStyleModule": "NavbarContainer",
      "modulePath": "src/components/NavbarContainer"
    },
    {
      "type": "component",
      "name": "Section",
      "id": 1079246,
      "children": [
        {
          "type": "element",
          "tagName": "section",
          "classNames": [
            "hero",
            "section",
            "is-block",
            "is-relative"
          ],
          "classNameExpressions": [
            {
              "js": "color",
              "classNames": [
                "is-{color}"
              ]
            },
            {
              "js": "size",
              "classNames": [
                "is-{size}"
              ]
            },
            {
              "js": "className",
              "classNames": [
                "{className}"
              ]
            }
          ],
          "children": [
            {
              "type": "if",
              "js": "backgroundImage",
              "children": [
                {
                  "type": "instance",
                  "componentId": 1986700,
                  "attributes": "{\n\timage: backgroundImage,\n  opacity: backgroundImageOpacity,\n  repeat: backgroundImageRepeat\n}",
                  "id": 6976618,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "image",
                      "value": "backgroundImage",
                      "isString": false,
                      "type": "Identifier"
                    },
                    {
                      "key": "opacity",
                      "value": "backgroundImageOpacity",
                      "isString": false,
                      "type": "Identifier"
                    },
                    {
                      "key": "repeat",
                      "value": "backgroundImageRepeat",
                      "isString": false,
                      "type": "Identifier"
                    }
                  ]
                }
              ],
              "id": 4689902,
              "isVisible": true
            },
            {
              "type": "children",
              "id": 6313629,
              "isVisible": true,
              "children": []
            }
          ],
          "attributes": "{\n\t...otherProps\n}",
          "style": "// Add light border if two white\n// sections next to each other.\n.is-white + &.is-white {\n  border-top: 1px solid #F0F0F0;\n}",
          "id": 7573224,
          "isVisible": true,
          "image": "",
          "name": "",
          "propsArray": [
            {
              "key": null,
              "value": "otherProps",
              "isString": false,
              "type": "SpreadElement"
            }
          ]
        }
      ],
      "code": "\tconst {\n    color, \n    size, \n    backgroundImage,\n    backgroundImageOpacity,\n    backgroundImageRepeat,\n    className,\n    children,\n    // Passed to section element\n    ...otherProps \n  } = props;\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "Section",
      "nameStyleModule": "SectionComponent",
      "modulePath": "src/components/Section"
    },
    {
      "type": "component",
      "name": "Hero Section",
      "id": 7454246,
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size,\n  backgroundImage: props.backgroundImage,\n  backgroundImageOpacity: props.backgroundImageOpacity\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "columns",
                    "is-vcentered",
                    "is-desktop"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column",
                        "is-5-desktop",
                        "has-text-centered-touch"
                      ],
                      "children": [
                        {
                          "type": "instance",
                          "componentId": 5415335,
                          "attributes": "{\n\ttitle: props.title,\n  subtitle: props.subtitle,\n  // Text size (1-6)\n  size: 1,\n  // Space between title/subtitle\n  spaced: true\n}",
                          "id": 2326079,
                          "isVisible": true,
                          "children": [],
                          "propsArray": [
                            {
                              "key": "title",
                              "value": "props.title",
                              "isString": false,
                              "type": "MemberExpression"
                            },
                            {
                              "key": "subtitle",
                              "value": "props.subtitle",
                              "isString": false,
                              "type": "MemberExpression"
                            },
                            {
                              "key": "size",
                              "value": "1",
                              "isString": false,
                              "type": "NumericLiteral"
                            },
                            {
                              "key": "spaced",
                              "value": "true",
                              "isString": false,
                              "type": "BooleanLiteral"
                            }
                          ]
                        },
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "buttons",
                            "is-inline-flex"
                          ],
                          "children": [
                            {
                              "type": "instance",
                              "componentId": 8669042,
                              "attributes": "{\n\tparentColor: props.color,\n  // small, normal, medium, large\n  size: \"medium\",\n  onClick: props.buttonOnClick\n}",
                              "children": [
                                {
                                  "type": "text",
                                  "text": "{props.buttonText}",
                                  "id": 3887774,
                                  "isVisible": true,
                                  "children": []
                                }
                              ],
                              "id": 9572835,
                              "isVisible": true,
                              "propsArray": [
                                {
                                  "key": "parentColor",
                                  "value": "props.color",
                                  "isString": false,
                                  "type": "MemberExpression"
                                },
                                {
                                  "key": "size",
                                  "value": "medium",
                                  "isString": true,
                                  "type": "StringLiteral"
                                },
                                {
                                  "key": "onClick",
                                  "value": "props.buttonOnClick",
                                  "isString": false,
                                  "type": "MemberExpression"
                                }
                              ]
                            }
                          ],
                          "id": 4497563,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "id": 6733235,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column",
                        "is-1"
                      ],
                      "name": "Spacer",
                      "id": 8571842,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "classNameExpressions": [],
                      "style": "",
                      "children": [],
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "figure",
                          "classNames": [
                            "image"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "img",
                              "attributes": "{\n  src: props.image,\n  alt: \"Illustration\"\n}",
                              "id": 9314021,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNames": [],
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": [
                                {
                                  "key": "src",
                                  "value": "props.image",
                                  "isString": false,
                                  "type": "MemberExpression"
                                },
                                {
                                  "key": "alt",
                                  "value": "Illustration",
                                  "isString": true,
                                  "type": "StringLiteral"
                                }
                              ]
                            }
                          ],
                          "style": "margin: 0 auto;\nmax-width: 570px;",
                          "id": 6832296,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "propsArray": []
                        }
                      ],
                      "id": 6527102,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "id": 3243841,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 580002,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "id": 8181092,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImage",
              "value": "props.backgroundImage",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "props.backgroundImageOpacity",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "tags": [
        "Popular",
        "Hero"
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "code": "",
      "nameFormatted": "HeroSection",
      "nameStyleModule": "HeroSection",
      "modulePath": "src/components/HeroSection"
    },
    {
      "type": "component",
      "name": "Section Button",
      "id": 8669042,
      "children": [
        {
          "type": "element",
          "tagName": "button",
          "classNames": [
            "button"
          ],
          "children": [
            {
              "type": "children",
              "id": 776571,
              "isVisible": true,
              "children": []
            }
          ],
          "attributes": "{\n  ...otherProps\n}",
          "classNameExpressions": [
            {
              "js": "['primary', 'info', 'success', 'warning', 'danger', 'black', 'dark'].includes(parentColor)",
              "classNames": [
                "is-{parentColor}",
                "is-inverted"
              ]
            },
            {
              "js": " ['white', 'light'].includes(parentColor) || !parentColor",
              "classNames": [
                "is-primary"
              ]
            },
            {
              "js": "size",
              "classNames": [
                "is-{size}"
              ]
            },
            {
              "js": "state",
              "classNames": [
                "is-{state}"
              ]
            },
            {
              "js": "fullWidth",
              "classNames": [
                "is-fullwidth"
              ]
            }
          ],
          "id": 7815642,
          "isVisible": true,
          "image": "",
          "name": "",
          "style": "",
          "propsArray": [
            {
              "key": null,
              "value": "otherProps",
              "isString": false,
              "type": "SpreadElement"
            }
          ]
        }
      ],
      "description": "A button whose color is determined by the background color of its parent component (passed in via `parentColor` prop).",
      "code": "\tconst {\n    parentColor, \n    size, \n    state, \n    fullWidth,\n    // Passed to button element\n    ...otherProps\n  } = props;\n",
      "isVisible": true,
      "nameLibrary": "",
      "tags": [],
      "nameFormatted": "SectionButton",
      "nameStyleModule": "SectionButton",
      "modulePath": "src/components/SectionButton"
    },
    {
      "type": "component",
      "name": "Section Header",
      "id": 5415335,
      "children": [
        {
          "type": "element",
          "tagName": "header",
          "children": [
            {
              "type": "if",
              "js": "props.title",
              "id": 3832557,
              "children": [
                {
                  "type": "element",
                  "tagName": "h1",
                  "classNames": [
                    "title",
                    "has-text-weight-bold"
                  ],
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.title}",
                      "id": 3346646,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "classNameExpressions": [
                    {
                      "js": "props.size",
                      "classNames": [
                        "is-{props.size}"
                      ]
                    },
                    {
                      "js": "props.size === 1",
                      "classNames": [
                        "is-size-2-mobile"
                      ]
                    },
                    {
                      "js": "props.spaced",
                      "classNames": [
                        "is-spaced"
                      ]
                    }
                  ],
                  "id": 5428871,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "style": "",
                  "propsArray": []
                }
              ],
              "isVisible": true
            },
            {
              "type": "if",
              "js": "props.subtitle",
              "children": [
                {
                  "type": "element",
                  "tagName": "p",
                  "classNames": [
                    "subtitle"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "span",
                      "id": 692891,
                      "style": "// Subtitle text generally isn't very long\n// so usually looks better to limit width.\nmax-width: 700px;\n// So we can have max-width but still\n// have alignment controlled by text-align.\ndisplay: inline-block;",
                      "children": [
                        {
                          "type": "text",
                          "text": "{props.subtitle}",
                          "id": 4050505,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "propsArray": []
                    }
                  ],
                  "id": 2045497,
                  "classNameExpressions": [
                    {
                      "js": "props.size > 4",
                      "classNames": [
                        "is-6"
                      ]
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 4428299,
              "isVisible": true
            }
          ],
          "classNameExpressions": [
            {
              "js": "props.className",
              "classNames": [
                "{props.className}"
              ]
            }
          ],
          "style": "// Add bottom margin if element below\n&:not(:last-child){\n\tmargin-bottom: 3rem;\n}",
          "id": 4841502,
          "name": "Header",
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "classNames": [],
          "propsArray": []
        }
      ],
      "code": "\t// Render nothing if no title or subtitle\n\tif (!props.title && !props.subtitle){\n    return null;\n  }\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "SectionHeader",
      "nameStyleModule": "SectionHeader",
      "modulePath": "src/components/SectionHeader"
    },
    {
      "type": "component",
      "name": "Background Image",
      "id": 1986700,
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "attributes": "{\n  style: {\n    '--image': `url(${props.image})`,\n    '--opacity': props.opacity\n  }\n}",
          "style": "// Set using CSS vars defined\n// in element inline style.\nbackground-image: var(--image);\nopacity: var(--opacity);\n// Fill parent container\nbackground-position: center center;\nbackground-size: cover;\ntop: 0;\nleft: 0;\nbottom: 0;\nright: 0;\nposition: absolute;\n// Place under other elements\nz-index: 0;\n\n// Make it a repeating pattern\n&.repeat {\n  background-size: auto;\n  background-position: 0% 0%;\n  background-repeat: true;\n}",
          "id": 4730303,
          "classNameExpressions": [
            {
              "js": "props.repeat",
              "classNames": [
                "repeat"
              ]
            }
          ],
          "isVisible": true,
          "image": "",
          "name": "",
          "classNames": [],
          "children": [],
          "propsArray": [
            {
              "key": "style",
              "value": "{\n  '--image': `url(${props.image})`,\n  '--opacity': props.opacity\n}",
              "isString": false,
              "type": "ObjectExpression"
            }
          ]
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "code": "",
      "nameFormatted": "BackgroundImage",
      "nameStyleModule": "BackgroundImage",
      "modulePath": "src/components/BackgroundImage"
    },
    {
      "type": "component",
      "name": "Features Section",
      "id": 1166901,
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size,\n  backgroundImage: props.backgroundImage,\n  backgroundImageOpacity: props.backgroundImageOpacity\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "instance",
                  "componentId": 5415335,
                  "attributes": "{\n\ttitle: props.title,\n  subtitle: props.subtitle,\n  // Text size (1-6)\n  size: 3,\n  // Space between title/subtitle\n  spaced: true,\n  className: \"has-text-centered\"\n}",
                  "id": 5566068,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "title",
                      "value": "props.title",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "subtitle",
                      "value": "props.subtitle",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "size",
                      "value": "3",
                      "isString": false,
                      "type": "NumericLiteral"
                    },
                    {
                      "key": "spaced",
                      "value": "true",
                      "isString": false,
                      "type": "BooleanLiteral"
                    },
                    {
                      "key": "className",
                      "value": "has-text-centered",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                },
                {
                  "type": "instance",
                  "componentId": 8535752,
                  "attributes": "{\n  items: [\n    {\n      title: \"Explore\",\n      description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n      image: \"https://uploads.divjoy.com/undraw-mind_map_cwng.svg\"\n    },\n    {\n      title: \"Explore\",\n      description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n      image: \"https://uploads.divjoy.com/undraw-personal_settings_kihd.svg\"\n    },\n    {\n      title: \"Explore\",\n      description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n      image: \"https://uploads.divjoy.com/undraw-having_fun_iais.svg\"\n    },\n    {\n      title: \"Explore\",\n      description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n      image: \"https://uploads.divjoy.com/undraw-balloons_vxx5.svg\"\n    }\n  ]\n}",
                  "id": 753221,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "items",
                      "value": "[\n  {\n    title: \"Explore\",\n    description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n    image: \"https://uploads.divjoy.com/undraw-mind_map_cwng.svg\"\n  },\n  {\n    title: \"Explore\",\n    description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n    image: \"https://uploads.divjoy.com/undraw-personal_settings_kihd.svg\"\n  },\n  {\n    title: \"Explore\",\n    description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n    image: \"https://uploads.divjoy.com/undraw-having_fun_iais.svg\"\n  },\n  {\n    title: \"Explore\",\n    description: \"Integer ornare neque mauris, ac vulputate lacus venenatis et. Pellentesque ut ultrices purus.\",\n    image: \"https://uploads.divjoy.com/undraw-balloons_vxx5.svg\"\n  }\n]",
                      "isString": false,
                      "type": "ArrayExpression"
                    }
                  ]
                }
              ],
              "id": 2630198,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "id": 7879233,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImage",
              "value": "props.backgroundImage",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "props.backgroundImageOpacity",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "tags": [
        "Features",
        "Popular"
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "code": "",
      "nameFormatted": "FeaturesSection",
      "nameStyleModule": "FeaturesSection",
      "modulePath": "src/components/FeaturesSection"
    },
    {
      "type": "component",
      "name": "Features",
      "id": 8535752,
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "style": "max-width: 900px;\nmargin: 80px auto 0 auto;",
          "children": [
            {
              "type": "foreach",
              "valName": "item",
              "indexName": "index",
              "objectName": "props.items",
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "columns",
                    "is-variable",
                    "is-8",
                    "is-vcentered",
                    "has-text-centered-mobile"
                  ],
                  "style": "// Reverse every other row\n&:nth-of-type(even) {\n  flex-direction: row-reverse;\n}\n\n&:not(:last-of-type) {\n  padding-bottom: 1.5rem;\n  @media screen and (min-width: 769px) {\n    padding-bottom: 2.5rem;\n  }\n}",
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column",
                        "is-half"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "h3",
                          "classNames": [
                            "title",
                            "has-text-weight-bold",
                            "is-spaced",
                            "is-3"
                          ],
                          "style": "margin-bottom: 1.2rem !important;",
                          "children": [
                            {
                              "type": "text",
                              "text": "{item.title}",
                              "id": 967800,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "id": 9683929,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "propsArray": []
                        },
                        {
                          "type": "element",
                          "tagName": "p",
                          "classNames": [
                            "subtitle"
                          ],
                          "children": [
                            {
                              "type": "text",
                              "text": "{item.description}",
                              "id": 4810067,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "id": 1911482,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "id": 836366,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "figure",
                          "classNames": [
                            "image"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "img",
                              "attributes": "{\n  src: item.image,\n  alt: item.title\n}",
                              "id": 8166672,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNames": [],
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": [
                                {
                                  "key": "src",
                                  "value": "item.image",
                                  "isString": false,
                                  "type": "MemberExpression"
                                },
                                {
                                  "key": "alt",
                                  "value": "item.title",
                                  "isString": false,
                                  "type": "MemberExpression"
                                }
                              ]
                            }
                          ],
                          "id": 2009629,
                          "style": "max-width: 300px;\nmargin: 30px auto;",
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "propsArray": []
                        }
                      ],
                      "id": 5005051,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "id": 7839467,
                  "attributes": "{\n\tkey: index\n}",
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "propsArray": [
                    {
                      "key": "key",
                      "value": "index",
                      "isString": false,
                      "type": "Identifier"
                    }
                  ]
                }
              ],
              "id": 426775,
              "isVisible": true,
              "objectType": "array"
            }
          ],
          "id": 2124975,
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "classNames": [],
          "classNameExpressions": [],
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "code": "",
      "nameFormatted": "Features",
      "nameStyleModule": "Features",
      "modulePath": "src/components/Features"
    },
    {
      "type": "component",
      "name": "Footer",
      "id": 203216,
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size,\n  backgroundImage: props.backgroundImage,\n  backgroundImageOpacity: props.backgroundImageOpacity,\n  className: \"footer\"\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "brand",
                    "left"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "attributes": "{\n  href: '/' \n}",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "img",
                          "attributes": "{\n  src: props.logo,\n  alt: \"Logo\"\n}",
                          "id": 782650,
                          "isVisible": true,
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": [
                            {
                              "key": "src",
                              "value": "props.logo",
                              "isString": false,
                              "type": "MemberExpression"
                            },
                            {
                              "key": "alt",
                              "value": "Logo",
                              "isString": true,
                              "type": "StringLiteral"
                            }
                          ]
                        }
                      ],
                      "id": 4753230,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "id": 6328584,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "links",
                    "right"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "text",
                          "text": "About",
                          "id": 4566084,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "attributes": "{\n\thref: '/about'\n}",
                      "id": 5142584,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/about",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    },
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "text",
                          "text": "FAQ",
                          "id": 41141,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "attributes": "{\n\thref: '/faq',\n}",
                      "id": 7264362,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/faq",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    },
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "text",
                          "text": "Contact",
                          "id": 9366721,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "attributes": "{\n\thref: '/contact',\n}",
                      "id": 2333053,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/contact",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    },
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "text",
                          "text": "Blog",
                          "id": 8263046,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "attributes": "{\n  target: \"_blank\",\n  href: \"https://medium.com\",\n  rel: \"noopener noreferrer\"\n}",
                      "id": 5194689,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "target",
                          "value": "_blank",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "href",
                          "value": "https://medium.com",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "rel",
                          "value": "noopener noreferrer",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "id": 847974,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "social",
                    "right"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "span",
                          "classNames": [
                            "icon"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "i",
                              "classNames": [
                                "fab",
                                "fa-twitter"
                              ],
                              "id": 6283470,
                              "isVisible": true,
                              "attributes": "{\n\n}",
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": []
                            }
                          ],
                          "id": 3994074,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "attributes": "{\n\thref: 'https://twitter.com',\n\ttarget: '_blank',\n  rel: 'noopener noreferrer'\n}",
                      "id": 8489828,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "https://twitter.com",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "target",
                          "value": "_blank",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "rel",
                          "value": "noopener noreferrer",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    },
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "span",
                          "classNames": [
                            "icon"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "i",
                              "classNames": [
                                "fab",
                                "fa-facebook-f"
                              ],
                              "id": 8936496,
                              "isVisible": true,
                              "attributes": "{\n\n}",
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": []
                            }
                          ],
                          "id": 3232684,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "attributes": "{\n\thref: 'https://facebook.com',\n\ttarget: '_blank',\n  rel: 'noopener noreferrer'\n}",
                      "id": 7606899,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "https://facebook.com",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "target",
                          "value": "_blank",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "rel",
                          "value": "noopener noreferrer",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    },
                    {
                      "type": "element",
                      "tagName": "a",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "span",
                          "classNames": [
                            "icon"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "i",
                              "classNames": [
                                "fab",
                                "fa-instagram"
                              ],
                              "id": 8331840,
                              "isVisible": true,
                              "attributes": "{\n\n}",
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": []
                            }
                          ],
                          "id": 2925991,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "attributes": "{\n\thref: 'https://instagram.com',\n\ttarget: '_blank',\n  rel: 'noopener noreferrer'\n}",
                      "id": 2600085,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "https://instagram.com",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "target",
                          "value": "_blank",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "rel",
                          "value": "noopener noreferrer",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "id": 617938,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "copyright",
                    "left"
                  ],
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.copyright}",
                      "id": 9660171,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "id": 531660,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "style": "display: flex;\nflex-wrap: wrap;\n> div {\n  display: flex;\n  flex: none;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 24px;\n}\n\n.brand {\n  img {\n    display: block;\n    height: 32px;\n  }\n}\n\n.social {\n  align-items: flex-end;\n}\n\n.social, .links {\n  a {\n    color: inherit;\n    &:hover {\n      opacity: 0.8;\n    }\n\n    &:not(:first-of-type) {\n      margin-left: 20px;\n    }\n  }\n}\n\n// Tablet and up\n@media screen and (min-width: 769px) {\n  > div {\n    flex: 50%;\n  }\n\n  .left {\n    justify-content: flex-start;\n  }\n\n  .right {\n    justify-content: flex-end;\n  }\n  \n  // Move links to end (bottom right)\n  // Swaps position with social\n  .links {\n    order: 1;\n  }\n}",
              "id": 4190157,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "propsArray": []
            }
          ],
          "id": 4337160,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImage",
              "value": "props.backgroundImage",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "props.backgroundImageOpacity",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "className",
              "value": "footer",
              "isString": true,
              "type": "StringLiteral"
            }
          ]
        }
      ],
      "tags": [
        "Footer",
        "Popular"
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "code": "",
      "nameFormatted": "Footer",
      "nameStyleModule": "FooterComponent",
      "modulePath": "src/components/Footer"
    },
    {
      "type": "component",
      "subtype": "page-component",
      "children": [
        {
          "type": "instance",
          "componentId": 7454246,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"white\",\n  // normal, medium, large\n  size: \"medium\",\n  // Background image URL\n  backgroundImage: \"\",\n  // Background image opacity (0-1)\n  backgroundImageOpacity: 1,\n  // Text content\n  title: \"Your landing page title here\",\n  subtitle: \"This landing page is perfect for showing off your awesome product and driving people to sign up for a paid plan.\",\n  buttonText: \"Get Started\",\n  // Image on right\n  image: 'https://uploads.divjoy.com/undraw-japan_ubgk.svg',\n  // Button onClick handler\n  buttonOnClick: () => {\n    // Navigate to pricing page\n    router.push('/pricing');\n  }\n}",
          "id": 195077,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "medium",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImage",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "1",
              "isString": false,
              "type": "NumericLiteral"
            },
            {
              "key": "title",
              "value": "Your landing page title here",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "subtitle",
              "value": "This landing page is perfect for showing off your awesome product and driving people to sign up for a paid plan.",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "buttonText",
              "value": "Get Started",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "image",
              "value": "https://uploads.divjoy.com/undraw-japan_ubgk.svg",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "buttonOnClick",
              "value": "() => {\n  // Navigate to pricing page\n  router.push('/pricing');\n}",
              "isString": false,
              "type": "ArrowFunctionExpression"
            }
          ]
        },
        {
          "type": "instance",
          "componentId": 1166901,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"white\",\n  // normal, medium, large\n  size: \"medium\",\n  // Background image URL\n  backgroundImage: \"\",\n  // Background image opacity (0-1)\n  backgroundImageOpacity: 1,\n  // Text content\n  title: \"Features\",\n  subtitle: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud.\"\n}",
          "id": 8647187,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "medium",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImage",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "1",
              "isString": false,
              "type": "NumericLiteral"
            },
            {
              "key": "title",
              "value": "Features",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "subtitle",
              "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud.",
              "isString": true,
              "type": "StringLiteral"
            }
          ]
        }
      ],
      "id": 1513260,
      "code": "\tconst router = useRouter();\n",
      "isVisible": true,
      "path": "",
      "description": "",
      "requireAuth": false,
      "nameFormatted": "IndexPage",
      "nameStyleModule": "IndexPage",
      "modulePath": "src/pages/index"
    },
    {
      "type": "component",
      "name": "Form Field",
      "id": 2768808,
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "field"
          ],
          "children": [
            {
              "type": "if",
              "js": "props.label",
              "id": 6158054,
              "children": [
                {
                  "type": "element",
                  "tagName": "label",
                  "id": 3618406,
                  "attributes": "{\n\thtmlFor: props.id\n}",
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.label}",
                      "id": 4430005,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "classNames": [
                    "label"
                  ],
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": [
                    {
                      "key": "htmlFor",
                      "value": "props.id",
                      "isString": false,
                      "type": "MemberExpression"
                    }
                  ]
                }
              ],
              "isVisible": true
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "control"
              ],
              "children": [
                {
                  "type": "if",
                  "js": "type === \"textarea\"",
                  "children": [
                    {
                      "type": "element",
                      "tagName": "textarea",
                      "attributes": "{\n  ref: inputRef,\n  ...inputProps\n}",
                      "classNames": [
                        "textarea",
                        "is-medium"
                      ],
                      "id": 398205,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "children": [],
                      "propsArray": [
                        {
                          "key": "ref",
                          "value": "inputRef",
                          "isString": false,
                          "type": "Identifier"
                        },
                        {
                          "key": null,
                          "value": "inputProps",
                          "isString": false,
                          "type": "SpreadElement"
                        }
                      ]
                    }
                  ],
                  "id": 6549474,
                  "isVisible": true
                },
                {
                  "type": "if",
                  "js": "type !== \"textarea\"",
                  "children": [
                    {
                      "type": "element",
                      "tagName": "input",
                      "attributes": "{\n  ref: inputRef,\n  type: type,\n  ...inputProps\n}",
                      "classNames": [
                        "input",
                        "is-medium"
                      ],
                      "id": 889978,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "children": [],
                      "propsArray": [
                        {
                          "key": "ref",
                          "value": "inputRef",
                          "isString": false,
                          "type": "Identifier"
                        },
                        {
                          "key": "type",
                          "value": "type",
                          "isString": false,
                          "type": "Identifier"
                        },
                        {
                          "key": null,
                          "value": "inputProps",
                          "isString": false,
                          "type": "SpreadElement"
                        }
                      ]
                    }
                  ],
                  "id": 6476692,
                  "isVisible": true
                }
              ],
              "id": 5235996,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            },
            {
              "type": "if",
              "js": "error",
              "children": [
                {
                  "type": "element",
                  "tagName": "p",
                  "classNames": [
                    "help",
                    "is-danger"
                  ],
                  "children": [
                    {
                      "type": "text",
                      "text": "{error.message}",
                      "id": 5299485,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "id": 9601294,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 1823889,
              "isVisible": true
            }
          ],
          "id": 1060601,
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "classNameExpressions": [],
          "style": "",
          "propsArray": []
        }
      ],
      "code": "\tconst { error, type, inputRef, ...inputProps } = props;\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "FormField",
      "nameStyleModule": "FormField",
      "modulePath": "src/components/FormField"
    },
    {
      "type": "component",
      "name": "Form Alert",
      "id": 8324765,
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "notification"
          ],
          "classNameExpressions": [
            {
              "js": "props.type === \"error\"",
              "classNames": [
                "is-danger"
              ]
            },
            {
              "js": "props.type === \"success\"",
              "classNames": [
                "is-success"
              ]
            }
          ],
          "children": [
            {
              "type": "text",
              "text": "{props.message}",
              "id": 6208534,
              "isVisible": true,
              "children": []
            }
          ],
          "id": 2491376,
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "style": "",
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "code": "",
      "nameFormatted": "FormAlert",
      "nameStyleModule": "FormAlert",
      "modulePath": "src/components/FormAlert"
    },
    {
      "type": "component",
      "subtype": "page-component",
      "path": "dashboard",
      "id": 9447965,
      "children": [
        {
          "type": "instance",
          "componentId": 8384420,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"white\",\n  // normal, medium, large\n  size: \"medium\",\n  // Text content\n  title: \"Dashboard\",\n  subtitle: \"\"\n}",
          "id": 8433171,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "medium",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "title",
              "value": "Dashboard",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "subtitle",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            }
          ]
        }
      ],
      "requireAuth": true,
      "isVisible": true,
      "code": "",
      "description": "",
      "nameFormatted": "DashboardPage",
      "nameStyleModule": "DashboardPage",
      "modulePath": "src/pages/dashboard"
    },
    {
      "type": "component",
      "name": "Dashboard Section",
      "id": 8384420,
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "instance",
                  "componentId": 5415335,
                  "attributes": "{\n\ttitle: props.title,\n  subtitle: props.subtitle,\n  // Text size (1-6)\n  size: 3,\n  // Space between title/subtitle\n  spaced: true,\n  className: \"has-text-centered\"\n}",
                  "id": 6816971,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "title",
                      "value": "props.title",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "subtitle",
                      "value": "props.subtitle",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "size",
                      "value": "3",
                      "isString": false,
                      "type": "NumericLiteral"
                    },
                    {
                      "key": "spaced",
                      "value": "true",
                      "isString": false,
                      "type": "BooleanLiteral"
                    },
                    {
                      "key": "className",
                      "value": "has-text-centered",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                },
                {
                  "type": "if",
                  "js": "router.query.paid && auth.user.planIsActive",
                  "id": 6112031,
                  "children": [
                    {
                      "type": "element",
                      "tagName": "article",
                      "classNames": [
                        "message",
                        "is-success",
                        "mx-auto"
                      ],
                      "id": 9697238,
                      "children": [
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "message-body"
                          ],
                          "id": 4727996,
                          "children": [
                            {
                              "type": "text",
                              "text": "You are now subscribed&nbsp;&nbsp;🥳",
                              "id": 167235,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "name": "Paid Message",
                      "style": "max-width: 300px;",
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "classNameExpressions": [],
                      "propsArray": []
                    }
                  ],
                  "isVisible": true
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "columns",
                    "is-vcentered",
                    "is-desktop",
                    "mt-5"
                  ],
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column",
                        "is-6-desktop"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "content"
                          ],
                          "id": 6082503,
                          "children": [
                            {
                              "type": "text",
                              "text": "<p>\nThis would be a good place to build your custom product features after exporting your codebase.\n</p>\n<p>\nYou can grab the current user, query your database, render custom components, and anything else you'd like.\n</p>\n<p>\nDivjoy sets you up with everything you need so that you can get right to work on building your web app.\n</p>",
                              "id": 7230639,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "id": 7630422,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column",
                        "is-1"
                      ],
                      "name": "Spacer",
                      "id": 4138812,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "classNameExpressions": [],
                      "style": "",
                      "children": [],
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "div",
                      "classNames": [
                        "column"
                      ],
                      "children": [
                        {
                          "type": "element",
                          "tagName": "figure",
                          "classNames": [
                            "image"
                          ],
                          "children": [
                            {
                              "type": "element",
                              "tagName": "img",
                              "attributes": "{\n  src: \"https://uploads.divjoy.com/undraw-personal_settings_kihd.svg\",\n  alt: \"Illustration\"\n}",
                              "id": 6699119,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNames": [],
                              "classNameExpressions": [],
                              "style": "",
                              "children": [],
                              "propsArray": [
                                {
                                  "key": "src",
                                  "value": "https://uploads.divjoy.com/undraw-personal_settings_kihd.svg",
                                  "isString": true,
                                  "type": "StringLiteral"
                                },
                                {
                                  "key": "alt",
                                  "value": "Illustration",
                                  "isString": true,
                                  "type": "StringLiteral"
                                }
                              ]
                            }
                          ],
                          "style": "margin: 0 auto;\nmax-width: 370px;",
                          "id": 1322306,
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "propsArray": []
                        }
                      ],
                      "id": 9949994,
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "id": 3673801,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "div",
                  "id": 3364126,
                  "classNames": [
                    "mx-auto",
                    "has-text-centered",
                    "mt-5"
                  ],
                  "attributes": "{\n\tstyle: {\n    maxWidth: \"460px\"\n  }\n}",
                  "children": [
                    {
                      "type": "element",
                      "tagName": "small",
                      "id": 4199375,
                      "children": [
                        {
                          "type": "text",
                          "text": "Some helpful debug info 🐛",
                          "id": 3553834,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "nav",
                      "classNames": [
                        "panel",
                        "mt-3"
                      ],
                      "id": 2981,
                      "children": [
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "panel-block",
                            "is-block"
                          ],
                          "id": 676813,
                          "children": [
                            {
                              "type": "text",
                              "text": "Logged in as&nbsp;<strong>{auth.user.email}</strong>",
                              "id": 7897291,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        },
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "panel-block",
                            "is-block"
                          ],
                          "id": 1890532,
                          "children": [
                            {
                              "type": "if",
                              "js": "auth.user.stripeSubscriptionId",
                              "id": 6352291,
                              "children": [
                                {
                                  "type": "text",
                                  "text": "Subscription data\n<br/>\nID: <strong>{auth.user.stripeSubscriptionId}</strong>\n<br/>\nPrice ID: <strong>{auth.user.stripePriceId}</strong>\n<br/>\nStatus: <strong>{auth.user.stripeSubscriptionStatus}</strong>",
                                  "id": 3579202,
                                  "isVisible": true,
                                  "children": []
                                }
                              ],
                              "isVisible": true
                            },
                            {
                              "type": "if",
                              "js": "!auth.user.stripeSubscriptionId",
                              "id": 3295641,
                              "children": [
                                {
                                  "type": "element",
                                  "tagName": "a",
                                  "attributes": "{\n  href: '/pricing' \n}",
                                  "children": [
                                    {
                                      "type": "text",
                                      "text": "Subscribe to a plan",
                                      "id": 1608233,
                                      "isVisible": true,
                                      "children": []
                                    }
                                  ],
                                  "id": 4872524,
                                  "isVisible": true,
                                  "image": "",
                                  "name": "",
                                  "classNames": [],
                                  "classNameExpressions": [],
                                  "style": "",
                                  "propsArray": [
                                    {
                                      "key": "href",
                                      "value": "/pricing",
                                      "isString": true,
                                      "type": "StringLiteral"
                                    }
                                  ]
                                }
                              ],
                              "isVisible": true
                            }
                          ],
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        },
                        {
                          "type": "element",
                          "tagName": "div",
                          "classNames": [
                            "panel-block",
                            "is-block"
                          ],
                          "id": 6807425,
                          "children": [
                            {
                              "type": "element",
                              "tagName": "a",
                              "attributes": "{\n  href: '/settings/general' \n}",
                              "children": [
                                {
                                  "type": "text",
                                  "text": "Account settings",
                                  "id": 9127861,
                                  "isVisible": true,
                                  "children": []
                                }
                              ],
                              "id": 7300585,
                              "isVisible": true,
                              "image": "",
                              "name": "",
                              "classNames": [],
                              "classNameExpressions": [],
                              "style": "",
                              "propsArray": [
                                {
                                  "key": "href",
                                  "value": "/settings/general",
                                  "isString": true,
                                  "type": "StringLiteral"
                                }
                              ]
                            }
                          ],
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": []
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": [
                    {
                      "key": "style",
                      "value": "{\nmaxWidth: \"460px\"\n}",
                      "isString": false,
                      "type": "ObjectExpression"
                    }
                  ]
                }
              ],
              "id": 4452922,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "id": 368304,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "code": "\tconst auth = useAuth();\t\n\tconst router = useRouter();\n",
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "DashboardSection",
      "nameStyleModule": "DashboardSection",
      "modulePath": "src/components/DashboardSection"
    },
    {
      "type": "component",
      "subtype": "page-component",
      "path": "auth/:type",
      "id": 1594565,
      "code": "\tconst router = useRouter();\n",
      "children": [
        {
          "type": "instance",
          "componentId": 7423500,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"white\",\n  // normal, medium, large\n  size: \"large\",\n  // Background image URL\n  backgroundImage: \"\",\n  // Background image opacity (0-1)\n  backgroundImageOpacity: 1,\n  // signin, signup, forgotpass, changepass\n  type: router.query.type,\n  // Enable other auth providers\n  // google, facebook, twitter, github\n  providers: ['google', 'facebook', 'twitter'],\n  // Where to take user after auth\n  afterAuthPath: router.query.next || \"/dashboard\"\n  // Scroll down to \"Code\" section\n  // to customize further.\n}",
          "id": 5709137,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "large",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImage",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "1",
              "isString": false,
              "type": "NumericLiteral"
            },
            {
              "key": "type",
              "value": "router.query.type",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "providers",
              "value": "['google', 'facebook', 'twitter']",
              "isString": false,
              "type": "ArrayExpression"
            },
            {
              "key": "afterAuthPath",
              "value": "router.query.next || \"/dashboard\"",
              "isString": false,
              "type": "LogicalExpression"
            }
          ]
        }
      ],
      "isVisible": true,
      "description": "",
      "requireAuth": false,
      "nameFormatted": "AuthPage",
      "nameStyleModule": "AuthPage",
      "modulePath": "src/pages/auth/[type]"
    },
    {
      "type": "component",
      "name": "Auth",
      "code": "\tconst router = useRouter();\n\tconst [formAlert, setFormAlert] = useState(null);\n\n\tconst handleAuth = (user) => {\n    router.push(props.afterAuthPath);\n  }\n  \n  const handleFormAlert = (data) => {\n    setFormAlert(data);\n  }\n",
      "children": [
        {
          "type": "if",
          "js": "formAlert",
          "children": [
            {
              "type": "instance",
              "componentId": 8324765,
              "attributes": "{\n\ttype: formAlert.type,\n  message: formAlert.message\n}",
              "id": 1597161,
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "type",
                  "value": "formAlert.type",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "message",
                  "value": "formAlert.message",
                  "isString": false,
                  "type": "MemberExpression"
                }
              ]
            }
          ],
          "id": 991155,
          "isVisible": true
        },
        {
          "type": "instance",
          "componentId": 1992001,
          "attributes": "{\n  type: props.type,\n  typeValues: props.typeValues,\n  parentColor: props.parentColor,\n  onAuth: handleAuth,\n  onFormAlert: handleFormAlert\n}",
          "id": 879401,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "type",
              "value": "props.type",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "typeValues",
              "value": "props.typeValues",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "parentColor",
              "value": "props.parentColor",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "onAuth",
              "value": "handleAuth",
              "isString": false,
              "type": "Identifier"
            },
            {
              "key": "onFormAlert",
              "value": "handleFormAlert",
              "isString": false,
              "type": "Identifier"
            }
          ]
        },
        {
          "type": "if",
          "js": "['signup', 'signin'].includes(props.type)",
          "id": 3272387,
          "children": [
            {
              "type": "if",
              "js": "props.providers && props.providers.length",
              "id": 5954674,
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "id": 660497,
                  "classNames": [
                    "has-text-centered",
                    "is-size-7"
                  ],
                  "children": [
                    {
                      "type": "text",
                      "text": "OR",
                      "id": 3257134,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "name": "Social Divider",
                  "style": "margin: 1.2rem 0;",
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "classNameExpressions": [],
                  "propsArray": []
                },
                {
                  "type": "instance",
                  "componentId": 7373262,
                  "id": 7228357,
                  "attributes": "{\n\ttype: props.type,\n  buttonText: props.typeValues.buttonText,\n  showLastUsed: true,\n  providers: props.providers,\n  onAuth: handleAuth,\n  onError: (message) => {\n    handleFormAlert({\n      type: \"error\",\n      message: message\n    })\n  }\n}",
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "type",
                      "value": "props.type",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "buttonText",
                      "value": "props.typeValues.buttonText",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "showLastUsed",
                      "value": "true",
                      "isString": false,
                      "type": "BooleanLiteral"
                    },
                    {
                      "key": "providers",
                      "value": "props.providers",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "onAuth",
                      "value": "handleAuth",
                      "isString": false,
                      "type": "Identifier"
                    },
                    {
                      "key": "onError",
                      "value": "(message) => {\n  handleFormAlert({\n    type: \"error\",\n    message: message\n  })\n}",
                      "isString": false,
                      "type": "ArrowFunctionExpression"
                    }
                  ]
                }
              ],
              "isVisible": true
            },
            {
              "type": "instance",
              "componentId": 8742172,
              "id": 6282238,
              "attributes": "{\n\ttype: props.type,\n  typeValues: props.typeValues,\n}",
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "type",
                  "value": "props.type",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "typeValues",
                  "value": "props.typeValues",
                  "isString": false,
                  "type": "MemberExpression"
                }
              ]
            }
          ],
          "isVisible": true
        }
      ],
      "id": 4878040,
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "Auth",
      "nameStyleModule": "Auth",
      "modulePath": "src/components/Auth"
    },
    {
      "type": "component",
      "name": "Auth Form",
      "code": "\tconst [pending, setPending] = useState(false);\n\tconst { handleSubmit, register, errors, getValues } = useForm();\n\n  const submitHandlersByType = {\n    signin: ({ email, pass }) => {\n      return auth.signin(email, pass)\n        .then(user => {\n        \t// Call auth complete handler\n        \tprops.onAuth(user);\n      \t});\n    },\n    signup: ({ email, pass }) => {\n      return auth.signup(email, pass)\n        .then(user => {\n        \t// Call auth complete handler\n        \tprops.onAuth(user);\n      \t});\n    },\n    forgotpass: ({ email }) => {\n      return auth.sendPasswordResetEmail(email)\n      \t.then(() => {\n        \t// Show success alert message\n       \t\tprops.onFormAlert({\n          \ttype: \"success\",\n          \tmessage: \"Password reset email sent\"\n        \t});\n       });\n    },\n    changepass: ({ pass }) => {\n      return auth.confirmPasswordReset(pass)\n        .then(() => {\n        \t// Show success alert message\n          props.onFormAlert({\n            type: \"success\",\n            message: \"Your password has been changed\"\n          });\n        });\n    }\n  }\n  \n  // Handle form submission\n  const onSubmit = ({ email, pass }) => {\n    // Show pending indicator\n    setPending(true);\n    \n    // Call submit handler for auth type\n    submitHandlersByType[props.type]({\n      email,\n      pass\n    }).catch(error => {\n      // Show error alert message\n      props.onFormAlert({\n        type: \"error\",\n        message: error.message\n      });\n    }).finally(() => {\n      // Hide pending indicator\n      setPending(false);\n    });\n  }\n  ",
      "children": [
        {
          "type": "element",
          "tagName": "form",
          "children": [
            {
              "type": "if",
              "js": "['signup', 'signin', 'forgotpass'].includes(props.type)",
              "children": [
                {
                  "type": "instance",
                  "componentId": 2768808,
                  "attributes": "{\n  name: 'email',\n  type: 'email',\n  placeholder: 'Email',\n\terror: errors.email,\n  inputRef: register({ \n    required: \"Please enter an email\"\n  })\n}",
                  "id": 4086017,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "name",
                      "value": "email",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "type",
                      "value": "email",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "placeholder",
                      "value": "Email",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "error",
                      "value": "errors.email",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "inputRef",
                      "value": "register({ \n  required: \"Please enter an email\"\n})",
                      "isString": false,
                      "type": "CallExpression"
                    }
                  ]
                }
              ],
              "id": 6874310,
              "isVisible": true
            },
            {
              "type": "if",
              "js": "['signup', 'signin', 'changepass'].includes(props.type)",
              "children": [
                {
                  "type": "instance",
                  "componentId": 2768808,
                  "attributes": "{\n  size: props.inputSize,\n  name: 'pass',\n  type: 'password',\n  placeholder: 'Password',\n\terror: errors.pass,\n  inputRef: register({ \n    required: \"Please enter a password\"\n  })\n}",
                  "id": 7501096,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "size",
                      "value": "props.inputSize",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "name",
                      "value": "pass",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "type",
                      "value": "password",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "placeholder",
                      "value": "Password",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "error",
                      "value": "errors.pass",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "inputRef",
                      "value": "register({ \n  required: \"Please enter a password\"\n})",
                      "isString": false,
                      "type": "CallExpression"
                    }
                  ]
                }
              ],
              "id": 146267,
              "isVisible": true
            },
            {
              "type": "if",
              "js": "['signup', 'changepass'].includes(props.type)",
              "children": [
                {
                  "type": "instance",
                  "componentId": 2768808,
                  "attributes": "{\n  size: props.inputSize,\n  name: 'confirmPass',\n  type: 'password',\n  placeholder: 'Confirm Password',\n\terror: errors.confirmPass,\n  inputRef: register({ \n    required: \"Please enter your password again\",\n    validate: (value) => { \n      if (value === getValues().pass){\n        return true;\n      }else{\n        return \"This doesn't match your password\";\n      }\n    }\n  })\n}",
                  "id": 3699705,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "size",
                      "value": "props.inputSize",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "name",
                      "value": "confirmPass",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "type",
                      "value": "password",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "placeholder",
                      "value": "Confirm Password",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "error",
                      "value": "errors.confirmPass",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "inputRef",
                      "value": "register({ \n  required: \"Please enter your password again\",\n  validate: (value) => { \n    if (value === getValues().pass){\n      return true;\n    }else{\n      return \"This doesn't match your password\";\n    }\n  }\n})",
                      "isString": false,
                      "type": "CallExpression"
                    }
                  ]
                }
              ],
              "id": 6395372,
              "isVisible": true
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "field"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "p",
                  "classNames": [
                    "control",
                    ""
                  ],
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 8669042,
                      "attributes": "{\n\tparentColor: props.parentColor,\n  size: \"medium\",\n  fullWidth: true,\n  state: pending ? \"loading\" : \"normal\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "{props.typeValues.buttonText}",
                          "id": 8649875,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 139107,
                      "isVisible": true,
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.parentColor",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "size",
                          "value": "medium",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "fullWidth",
                          "value": "true",
                          "isString": false,
                          "type": "BooleanLiteral"
                        },
                        {
                          "key": "state",
                          "value": "pending ? \"loading\" : \"normal\"",
                          "isString": false,
                          "type": "ConditionalExpression"
                        }
                      ]
                    }
                  ],
                  "id": 7324755,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "name": "Submit",
              "id": 263413,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "attributes": "{\n  onSubmit: handleSubmit(onSubmit)\n}",
          "id": 8360134,
          "isVisible": true,
          "image": "",
          "name": "",
          "classNames": [],
          "classNameExpressions": [],
          "style": "",
          "propsArray": [
            {
              "key": "onSubmit",
              "value": "handleSubmit(onSubmit)",
              "isString": false,
              "type": "CallExpression"
            }
          ]
        }
      ],
      "id": 1992001,
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "AuthForm",
      "nameStyleModule": "AuthForm",
      "modulePath": "src/components/AuthForm"
    },
    {
      "type": "component",
      "id": 8742172,
      "name": "Auth Footer",
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "has-text-centered"
          ],
          "children": [
            {
              "type": "if",
              "js": "props.type === \"signup\"",
              "children": [
                {
                  "type": "text",
                  "text": "Have an account already?",
                  "id": 79236,
                  "isVisible": true,
                  "children": []
                },
                {
                  "type": "element",
                  "tagName": "a",
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.typeValues.linkTextSignin}",
                      "id": 6832497,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "attributes": "{\n  href: '/auth/signin'\n}",
                  "id": 2533132,
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": [
                    {
                      "key": "href",
                      "value": "/auth/signin",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                }
              ],
              "id": 9478233,
              "isVisible": true
            },
            {
              "type": "if",
              "js": "props.type === 'signin'",
              "children": [
                {
                  "type": "element",
                  "tagName": "a",
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.typeValues.linkTextSignup}",
                      "id": 1982509,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "attributes": "{\n  href: '/auth/signup'\n}",
                  "id": 928293,
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": [
                    {
                      "key": "href",
                      "value": "/auth/signup",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                },
                {
                  "type": "element",
                  "tagName": "a",
                  "attributes": "{\n  href: '/auth/forgotpass'\n}",
                  "children": [
                    {
                      "type": "text",
                      "text": "{props.typeValues.linkTextForgotpass}",
                      "id": 9959169,
                      "isVisible": true,
                      "children": []
                    }
                  ],
                  "id": 5039393,
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": [
                    {
                      "key": "href",
                      "value": "/auth/forgotpass",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                }
              ],
              "id": 4591034,
              "isVisible": true
            }
          ],
          "style": "margin-top: 1rem;\nfont-size: 0.9rem;\na {\n  margin: 0 0.5rem;\n}",
          "id": 3170242,
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "classNameExpressions": [],
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "code": "",
      "nameFormatted": "AuthFooter",
      "nameStyleModule": "AuthFooter",
      "modulePath": "src/components/AuthFooter"
    },
    {
      "type": "component",
      "id": 7373262,
      "name": "Auth Social",
      "code": "\tconst auth = useAuth();\n\tconst [pending, setPending] = useState(null);\n\tconst [lastUsed, setLastUsed] = useState(null);\n\n\tconst providerDisplayNames = {\n    google: \"Google\",\n    facebook: \"Facebook\",\n    twitter: \"Twitter\",\n    github: \"GitHub\"\n  }\n  \n  const onSigninWithProvider = (provider) => {\n    setPending(provider);\n    auth.signinWithProvider(provider)\n    \t.then(user => {\n      \t// Remember this provider was last used\n      \t// so we can indicate for next login.\n      \tlocalStorage.setItem('lastUsedAuthProvider', provider);\n      \tprops.onAuth(user);\n    \t})\n      .catch(error => {\n      \tprops.onError(error.message);\n    \t})\n    \t.finally(() => {\n      \tsetPending(null);\n    \t})\n  }\n  \n  // Get value of last used auth provider\n  useEffect(() => {\n    if (props.showLastUsed){\n      const lastUsed = localStorage.getItem('lastUsedAuthProvider');\n      if (lastUsed){\n        setLastUsed(lastUsed);\n      }\n    }\n  }, [props.showLastUsed]);\n",
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "buttons"
          ],
          "id": 1527098,
          "children": [
            {
              "type": "foreach",
              "id": 1385570,
              "valName": "provider",
              "objectName": "props.providers",
              "children": [
                {
                  "type": "element",
                  "tagName": "button",
                  "children": [
                    {
                      "type": "element",
                      "tagName": "div",
                      "id": 6564128,
                      "classNames": [
                        "icon"
                      ],
                      "style": "position: absolute;\nleft: 0.75em;\nimg {\n  width: 20px;\n}",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "img",
                          "attributes": "{\n  src: `https://uploads.divjoy.com/icon-${provider}.svg`,\n  alt: providerDisplayNames[provider]\n}",
                          "id": 3861745,
                          "isVisible": true,
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": [
                            {
                              "key": "src",
                              "value": "`https://uploads.divjoy.com/icon-${provider}.svg`",
                              "isString": false,
                              "type": "TemplateLiteral"
                            },
                            {
                              "key": "alt",
                              "value": "providerDisplayNames[provider]",
                              "isString": false,
                              "type": "MemberExpression"
                            }
                          ]
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "span",
                      "id": 2465898,
                      "children": [
                        {
                          "type": "text",
                          "text": "{props.buttonText} with {providerDisplayNames[provider]}",
                          "id": 5232190,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "if",
                      "js": "provider === lastUsed",
                      "id": 5303502,
                      "children": [
                        {
                          "type": "element",
                          "tagName": "span",
                          "classNames": [
                            "tag",
                            "is-warning"
                          ],
                          "id": 4988378,
                          "children": [
                            {
                              "type": "text",
                              "text": "Last used",
                              "id": 7783084,
                              "isVisible": true,
                              "children": []
                            }
                          ],
                          "style": "position: absolute;\ntop: -6px;\nright: -6px;\nopacity: 0.85;",
                          "isVisible": true,
                          "attributes": "{\n\n}",
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "propsArray": []
                        }
                      ],
                      "isVisible": true
                    }
                  ],
                  "id": 6058934,
                  "attributes": "{\n  onClick: () => {\n    onSigninWithProvider(provider);\n  },\n  key: provider\n}",
                  "classNames": [
                    "button",
                    "is-medium",
                    "is-fullwidth"
                  ],
                  "classNameExpressions": [
                    {
                      "js": "pending === provider",
                      "classNames": [
                        "is-loading"
                      ]
                    }
                  ],
                  "isVisible": true,
                  "image": "",
                  "name": "",
                  "style": "",
                  "propsArray": [
                    {
                      "key": "onClick",
                      "value": "() => {\n  onSigninWithProvider(provider);\n}",
                      "isString": false,
                      "type": "ArrowFunctionExpression"
                    },
                    {
                      "key": "key",
                      "value": "provider",
                      "isString": false,
                      "type": "Identifier"
                    }
                  ]
                }
              ],
              "isVisible": true,
              "objectType": "array",
              "indexName": ""
            }
          ],
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "classNameExpressions": [],
          "style": "",
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "AuthSocial",
      "nameStyleModule": "AuthSocial",
      "modulePath": "src/components/AuthSocial"
    },
    {
      "type": "component",
      "name": "Auth Section",
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size,\n  backgroundImage: props.backgroundImage,\n  backgroundImageOpacity: props.backgroundImageOpacity\n}",
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "children": [
                {
                  "type": "instance",
                  "componentId": 5415335,
                  "attributes": "{\n\ttitle: allTypeValues[currentType].title,\n  subtitle: \"\",\n  // Text size (1-6)\n  size: 3,\n  // Space between title/subtitle\n  spaced: true,\n  className: \"has-text-centered\"\n}",
                  "id": 2432424,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "title",
                      "value": "allTypeValues[currentType].title",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "subtitle",
                      "value": "",
                      "isString": true,
                      "type": "StringLiteral"
                    },
                    {
                      "key": "size",
                      "value": "3",
                      "isString": false,
                      "type": "NumericLiteral"
                    },
                    {
                      "key": "spaced",
                      "value": "true",
                      "isString": false,
                      "type": "BooleanLiteral"
                    },
                    {
                      "key": "className",
                      "value": "has-text-centered",
                      "isString": true,
                      "type": "StringLiteral"
                    }
                  ]
                },
                {
                  "type": "instance",
                  "componentId": 4878040,
                  "attributes": "{\n \ttype: currentType,\n  typeValues: typeValues,\n  parentColor: props.color,\n  providers: props.providers,\n  afterAuthPath: props.afterAuthPath,\n  // Remount (clear state) if type changes\n  key: currentType\n}",
                  "id": 5157117,
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "type",
                      "value": "currentType",
                      "isString": false,
                      "type": "Identifier"
                    },
                    {
                      "key": "typeValues",
                      "value": "typeValues",
                      "isString": false,
                      "type": "Identifier"
                    },
                    {
                      "key": "parentColor",
                      "value": "props.color",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "providers",
                      "value": "props.providers",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "afterAuthPath",
                      "value": "props.afterAuthPath",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "key",
                      "value": "currentType",
                      "isString": false,
                      "type": "Identifier"
                    }
                  ]
                }
              ],
              "id": 3283904,
              "style": "max-width: 450px;",
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "propsArray": []
            }
          ],
          "id": 606755,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImage",
              "value": "props.backgroundImage",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "props.backgroundImageOpacity",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "tags": [
        "Authentication"
      ],
      "code": "\t// Values for each auth type\n\tconst allTypeValues = {\n    signin: {\n      // Top title\n      title: \"Welcome back\",\n      // Submit button text\n      buttonText: \"Sign in\",\n      // Link text to other auth types\n      linkTextSignup: \"Create an account\",\n      linkTextForgotpass: \"Forgot Password?\"\n    },\n    signup: {\n      title: \"Get yourself an account\",\n      buttonText: \"Sign up\",\n      linkTextSignin: \"Sign in\"\n    },\n    forgotpass: {\n      title: \"Get a new password\",\n      buttonText: \"Reset password\"\n    },\n    changepass: {\n      title: \"Choose a new password\",\n      buttonText: \"Change password\"\n    },\n  };\n\t\n\t// Ensure we have a valid auth type\n\tconst currentType = allTypeValues[props.type] \n  \t\t\t\t\t\t\t\t\t\t\t? props.type \n  \t\t\t\t\t\t\t\t\t\t\t: 'signup';\n\n\t// Get values for current auth type\n\tconst typeValues = allTypeValues[currentType];\n",
      "id": 7423500,
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "nameFormatted": "AuthSection",
      "nameStyleModule": "AuthSection",
      "modulePath": "src/components/AuthSection"
    },
    {
      "type": "component",
      "subtype": "page-component",
      "path": "settings/:section",
      "id": 5039911,
      "children": [
        {
          "type": "instance",
          "componentId": 1199837,
          "id": 4873782,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"white\",\n  // normal, medium, large\n  size: \"medium\",\n  // Background image URL\n  backgroundImage: \"\",\n  // Background image opacity (0-1)\n  backgroundImageOpacity: 1,\n  // Settings section (general, password, billing)\n  section: router.query.section,\n  // Add key so state resets when section changes\n  key: router.query.section,\n}",
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "medium",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImage",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "1",
              "isString": false,
              "type": "NumericLiteral"
            },
            {
              "key": "section",
              "value": "router.query.section",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "key",
              "value": "router.query.section",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "requireAuth": true,
      "code": "\tconst router = useRouter();\n",
      "isVisible": true,
      "description": "",
      "nameFormatted": "SettingsPage",
      "nameStyleModule": "SettingsPage",
      "modulePath": "src/pages/settings/[section]"
    },
    {
      "type": "component",
      "id": 1199837,
      "name": "Settings Section",
      "code": "\tconst auth = useAuth();\t\n\tconst [formAlert, setFormAlert] = useState(null);\n\n\t// State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n\tconst [reauthState, setReauthState] = useState({\n    show: false\n  });\n\n\tconst validSections = {\n    \"general\": true,\n    \"password\": true,\n    \"billing\": true,\n  };\n\n\tconst section = validSections[props.section] \n  \t? props.section\n  \t: \"general\";\n\n\t// Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n  const handleStatus = ({ type, message, callback }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null);\n      // Then update state to show re-authentication modal\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback,\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message,\n      });\n    }\n  }\n",
      "children": [
        {
          "type": "instance",
          "componentId": 1079246,
          "attributes": "{\n\tcolor: props.color,\n  size: props.size,\n  backgroundImage: props.backgroundImage,\n  backgroundImageOpacity: props.backgroundImageOpacity\n}",
          "children": [
            {
              "type": "if",
              "js": "reauthState.show",
              "id": 1305075,
              "children": [
                {
                  "type": "instance",
                  "componentId": 9221431,
                  "id": 2356508,
                  "attributes": "{\n\tcallback: reauthState.callback,\n  provider: auth.user.providers[0],\n  onDone: () => setReauthState({ show: false })\n}",
                  "isVisible": true,
                  "children": [],
                  "propsArray": [
                    {
                      "key": "callback",
                      "value": "reauthState.callback",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "provider",
                      "value": "auth.user.providers[0]",
                      "isString": false,
                      "type": "MemberExpression"
                    },
                    {
                      "key": "onDone",
                      "value": "() => setReauthState({ show: false })",
                      "isString": false,
                      "type": "ArrowFunctionExpression"
                    }
                  ]
                }
              ],
              "isVisible": true
            },
            {
              "type": "instance",
              "componentId": 9896021,
              "id": 905432,
              "attributes": "{\n\tactiveKey: section,\n  parentColor: props.color,\n}",
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "activeKey",
                  "value": "section",
                  "isString": false,
                  "type": "Identifier"
                },
                {
                  "key": "parentColor",
                  "value": "props.color",
                  "isString": false,
                  "type": "MemberExpression"
                }
              ]
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "container"
              ],
              "id": 9818537,
              "children": [
                {
                  "type": "if",
                  "js": "formAlert",
                  "id": 6142884,
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 8324765,
                      "attributes": "{\n\ttype: formAlert.type,\n  message: formAlert.message\n}",
                      "id": 99728,
                      "isVisible": true,
                      "children": [],
                      "propsArray": [
                        {
                          "key": "type",
                          "value": "formAlert.type",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "message",
                          "value": "formAlert.message",
                          "isString": false,
                          "type": "MemberExpression"
                        }
                      ]
                    }
                  ],
                  "isVisible": true
                },
                {
                  "type": "if",
                  "js": "section === \"general\"",
                  "id": 1904498,
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 882067,
                      "id": 3756123,
                      "attributes": "{\n  parentColor: props.color,\n  onStatus: handleStatus,\n}",
                      "isVisible": true,
                      "children": [],
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.color",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "onStatus",
                          "value": "handleStatus",
                          "isString": false,
                          "type": "Identifier"
                        }
                      ]
                    }
                  ],
                  "isVisible": true
                },
                {
                  "type": "if",
                  "js": "section === \"password\"",
                  "id": 2539054,
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 9230145,
                      "id": 1407406,
                      "attributes": "{\n  parentColor: props.color,\n  onStatus: handleStatus,\n}",
                      "isVisible": true,
                      "children": [],
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.color",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "onStatus",
                          "value": "handleStatus",
                          "isString": false,
                          "type": "Identifier"
                        }
                      ]
                    }
                  ],
                  "isVisible": true
                },
                {
                  "type": "if",
                  "js": "section === \"billing\"",
                  "id": 6181446,
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 3911533,
                      "id": 9728987,
                      "attributes": "{\n  parentColor: props.color,\n  onStatus: handleStatus,\n}",
                      "isVisible": true,
                      "children": [],
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.color",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "onStatus",
                          "value": "handleStatus",
                          "isString": false,
                          "type": "Identifier"
                        }
                      ]
                    }
                  ],
                  "isVisible": true
                }
              ],
              "style": "margin-top: 50px;",
              "attributes": "{\n\tstyle: {\n    maxWidth: section !== \"billing\" \n      ? \"450px\" \n    \t: undefined\n  }\n}",
              "isVisible": true,
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "propsArray": [
                {
                  "key": "style",
                  "value": "{\nmaxWidth: section !== \"billing\" \n  ? \"450px\" \n    : undefined\n}",
                  "isString": false,
                  "type": "ObjectExpression"
                }
              ]
            }
          ],
          "id": 2726659,
          "isVisible": true,
          "propsArray": [
            {
              "key": "color",
              "value": "props.color",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "size",
              "value": "props.size",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImage",
              "value": "props.backgroundImage",
              "isString": false,
              "type": "MemberExpression"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "props.backgroundImageOpacity",
              "isString": false,
              "type": "MemberExpression"
            }
          ]
        }
      ],
      "tags": [
        "Authentication"
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "nameFormatted": "SettingsSection",
      "nameStyleModule": "SettingsSection",
      "modulePath": "src/components/SettingsSection"
    },
    {
      "type": "component",
      "id": 9221431,
      "name": "Reauth Modal",
      "code": "\tconst auth = useAuth();\n\tconst [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = data => {\n    const { pass } = data;\n    setPending(true);\n    \n    auth\n      .signin(auth.user.email, pass)\n      .then(() => {\n        // Call failed action that originally required reauth\n        props.callback();\n        // Let parent know we're done so they can hide modal\n        props.onDone();\n    \t})\n      .catch(error => {\n        // Hide pending indicator\n      \tsetPending(false);\n      \t// Show error alert message\n        setFormAlert({\n          type: \"error\",\n          message: error.message\n        });\n      });\n  };\n",
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "modal",
            "is-active"
          ],
          "id": 9367725,
          "children": [
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "modal-background"
              ],
              "id": 9601012,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "children": [],
              "propsArray": []
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "card"
              ],
              "id": 9800396,
              "children": [
                {
                  "type": "element",
                  "tagName": "header",
                  "classNames": [
                    "card-header"
                  ],
                  "id": 7829760,
                  "children": [
                    {
                      "type": "element",
                      "tagName": "p",
                      "classNames": [
                        "card-header-title"
                      ],
                      "id": 7814052,
                      "children": [
                        {
                          "type": "text",
                          "text": "Please sign in again to complete this action",
                          "id": 3327130,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    },
                    {
                      "type": "element",
                      "tagName": "span",
                      "children": [
                        {
                          "type": "element",
                          "tagName": "a",
                          "classNames": [
                            "delete"
                          ],
                          "id": 8829544,
                          "attributes": "{\n\tariaLabel: \"close\",\n  onClick: (e) => props.onCancel()\n}",
                          "isVisible": true,
                          "image": "",
                          "name": "",
                          "classNameExpressions": [],
                          "style": "",
                          "children": [],
                          "propsArray": [
                            {
                              "key": "ariaLabel",
                              "value": "close",
                              "isString": true,
                              "type": "StringLiteral"
                            },
                            {
                              "key": "onClick",
                              "value": "(e) => props.onCancel()",
                              "isString": false,
                              "type": "ArrowFunctionExpression"
                            }
                          ]
                        }
                      ],
                      "id": 5261877,
                      "classNames": [
                        "card-header-icon"
                      ],
                      "isVisible": true,
                      "attributes": "{\n\n}",
                      "image": "",
                      "name": "",
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": []
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "section",
                  "classNames": [
                    "card-content"
                  ],
                  "id": 161019,
                  "children": [
                    {
                      "type": "if",
                      "js": "formAlert",
                      "id": 4364833,
                      "children": [
                        {
                          "type": "instance",
                          "componentId": 8324765,
                          "attributes": "{\n\ttype: formAlert.type,\n  message: formAlert.message\n}",
                          "id": 6380839,
                          "isVisible": true,
                          "children": [],
                          "propsArray": [
                            {
                              "key": "type",
                              "value": "formAlert.type",
                              "isString": false,
                              "type": "MemberExpression"
                            },
                            {
                              "key": "message",
                              "value": "formAlert.message",
                              "isString": false,
                              "type": "MemberExpression"
                            }
                          ]
                        }
                      ],
                      "isVisible": true
                    },
                    {
                      "type": "if",
                      "js": "props.provider === \"password\"",
                      "id": 9081288,
                      "children": [
                        {
                          "type": "element",
                          "tagName": "form",
                          "id": 9385126,
                          "attributes": "{\n\tonSubmit: handleSubmit(onSubmit)\n}",
                          "children": [
                            {
                              "type": "instance",
                              "componentId": 2768808,
                              "attributes": "{\n  name: 'pass',\n  type: 'password',\n  placeholder: 'Password',\n\terror: errors.pass,\n  inputRef: register({ \n    required: \"Please enter your password\"\n  })\n}",
                              "id": 7134453,
                              "isVisible": true,
                              "children": [],
                              "propsArray": [
                                {
                                  "key": "name",
                                  "value": "pass",
                                  "isString": true,
                                  "type": "StringLiteral"
                                },
                                {
                                  "key": "type",
                                  "value": "password",
                                  "isString": true,
                                  "type": "StringLiteral"
                                },
                                {
                                  "key": "placeholder",
                                  "value": "Password",
                                  "isString": true,
                                  "type": "StringLiteral"
                                },
                                {
                                  "key": "error",
                                  "value": "errors.pass",
                                  "isString": false,
                                  "type": "MemberExpression"
                                },
                                {
                                  "key": "inputRef",
                                  "value": "register({ \n  required: \"Please enter your password\"\n})",
                                  "isString": false,
                                  "type": "CallExpression"
                                }
                              ]
                            },
                            {
                              "type": "element",
                              "tagName": "div",
                              "classNames": [
                                "field"
                              ],
                              "children": [
                                {
                                  "type": "element",
                                  "tagName": "div",
                                  "classNames": [
                                    "control"
                                  ],
                                  "children": [
                                    {
                                      "type": "instance",
                                      "componentId": 8669042,
                                      "attributes": "{\n\tparentColor: props.parentColor,\n  size: \"medium\",\n  state: pending ? \"loading\" : \"normal\"\n}",
                                      "children": [
                                        {
                                          "type": "text",
                                          "text": "Sign in",
                                          "id": 8924286,
                                          "isVisible": true,
                                          "children": []
                                        }
                                      ],
                                      "id": 3834188,
                                      "isVisible": true,
                                      "propsArray": [
                                        {
                                          "key": "parentColor",
                                          "value": "props.parentColor",
                                          "isString": false,
                                          "type": "MemberExpression"
                                        },
                                        {
                                          "key": "size",
                                          "value": "medium",
                                          "isString": true,
                                          "type": "StringLiteral"
                                        },
                                        {
                                          "key": "state",
                                          "value": "pending ? \"loading\" : \"normal\"",
                                          "isString": false,
                                          "type": "ConditionalExpression"
                                        }
                                      ]
                                    }
                                  ],
                                  "id": 9130788,
                                  "isVisible": true,
                                  "attributes": "{\n\n}",
                                  "image": "",
                                  "name": "",
                                  "classNameExpressions": [],
                                  "style": "",
                                  "propsArray": []
                                }
                              ],
                              "id": 7350277,
                              "isVisible": true,
                              "attributes": "{\n\n}",
                              "image": "",
                              "name": "",
                              "classNameExpressions": [],
                              "style": "",
                              "propsArray": []
                            }
                          ],
                          "isVisible": true,
                          "image": "",
                          "name": "",
                          "classNames": [],
                          "classNameExpressions": [],
                          "style": "",
                          "propsArray": [
                            {
                              "key": "onSubmit",
                              "value": "handleSubmit(onSubmit)",
                              "isString": false,
                              "type": "CallExpression"
                            }
                          ]
                        }
                      ],
                      "isVisible": true
                    },
                    {
                      "type": "if",
                      "js": "props.provider !== \"password\"",
                      "id": 9525611,
                      "children": [
                        {
                          "type": "instance",
                          "componentId": 7373262,
                          "id": 3033403,
                          "attributes": "{\n\ttype: \"signin\",\n  buttonText: \"Sign in\",\n  showLastUsed: false,\n  providers: [props.provider],\n  onAuth: () => {\n    props.callback();\n   \tprops.onDone();\n  },\n  onError: (message) => {\n    setFormAlert({\n      type: \"error\",\n      message: message\n    })\n  }\n}",
                          "isVisible": true,
                          "children": [],
                          "propsArray": [
                            {
                              "key": "type",
                              "value": "signin",
                              "isString": true,
                              "type": "StringLiteral"
                            },
                            {
                              "key": "buttonText",
                              "value": "Sign in",
                              "isString": true,
                              "type": "StringLiteral"
                            },
                            {
                              "key": "showLastUsed",
                              "value": "false",
                              "isString": false,
                              "type": "BooleanLiteral"
                            },
                            {
                              "key": "providers",
                              "value": "[props.provider]",
                              "isString": false,
                              "type": "ArrayExpression"
                            },
                            {
                              "key": "onAuth",
                              "value": "() => {\n  props.callback();\n  props.onDone();\n}",
                              "isString": false,
                              "type": "ArrowFunctionExpression"
                            },
                            {
                              "key": "onError",
                              "value": "(message) => {\n  setFormAlert({\n    type: \"error\",\n    message: message\n  })\n}",
                              "isString": false,
                              "type": "ArrowFunctionExpression"
                            }
                          ]
                        }
                      ],
                      "isVisible": true
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "classNameExpressions": [],
          "style": "",
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "ReauthModal",
      "nameStyleModule": "ReauthModal",
      "modulePath": "src/components/ReauthModal"
    },
    {
      "type": "component",
      "id": 9896021,
      "name": "Settings Nav",
      "children": [
        {
          "type": "element",
          "tagName": "div",
          "classNames": [
            "tabs",
            "is-toggle",
            "is-centered"
          ],
          "id": 4584533,
          "children": [
            {
              "type": "element",
              "tagName": "ul",
              "id": 6124122,
              "children": [
                {
                  "type": "element",
                  "tagName": "li",
                  "id": 7676127,
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "attributes": "{\n  href: \"/settings/general\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "General",
                          "id": 6552103,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 4721846,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/settings/general",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "classNameExpressions": [
                    {
                      "js": "props.activeKey === \"general\"",
                      "classNames": [
                        "is-active"
                      ]
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "li",
                  "id": 5286111,
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "attributes": "{\n  href: \"/settings/password\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "Password",
                          "id": 9792024,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 2528294,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/settings/password",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "classNameExpressions": [
                    {
                      "js": "props.activeKey === \"password\"",
                      "classNames": [
                        "is-active"
                      ]
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "style": "",
                  "propsArray": []
                },
                {
                  "type": "element",
                  "tagName": "li",
                  "id": 6461200,
                  "children": [
                    {
                      "type": "element",
                      "tagName": "a",
                      "attributes": "{\n  href: \"/settings/billing\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "Billing",
                          "id": 4741937,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 9185562,
                      "isVisible": true,
                      "image": "",
                      "name": "",
                      "classNames": [],
                      "classNameExpressions": [],
                      "style": "",
                      "propsArray": [
                        {
                          "key": "href",
                          "value": "/settings/billing",
                          "isString": true,
                          "type": "StringLiteral"
                        }
                      ]
                    }
                  ],
                  "classNameExpressions": [
                    {
                      "js": "props.activeKey === \"billing\"",
                      "classNames": [
                        "is-active"
                      ]
                    }
                  ],
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNames": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNames": [],
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "classNameExpressions": [
            {
              "js": "props.parentColor === \"white\"",
              "classNames": [
                "active-tab-text-white"
              ]
            }
          ],
          "style": "// Fix a Bulma + Safari bug where\n// text of active tab is black on black.\n// See https://github.com/jgthms/bulma/issues/3009\n&.active-tab-text-white li.is-active a {\n  color: white !important;\n}",
          "isVisible": true,
          "attributes": "{\n\n}",
          "image": "",
          "name": "",
          "propsArray": []
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "code": "",
      "nameFormatted": "SettingsNav",
      "nameStyleModule": "SettingsNav",
      "modulePath": "src/components/SettingsNav"
    },
    {
      "type": "component",
      "id": 882067,
      "name": "Settings General",
      "code": "  const auth = useAuth();\n\tconst [pending, setPending] = useState(false);\n\n  const { \n    register, \n    handleSubmit, \n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    // Show pending indicator\n\t\tsetPending(true);\n    \n    return auth\n      .updateProfile(data)\n      .then(() => {\n        // Set success status\n        props.onStatus({\n          type: \"success\",\n          message: \"Your profile has been updated\",\n        });\n      })\n      .catch(error => {\n      \tif (error.code === \"auth/requires-recent-login\") {\n          props.onStatus({\n            type: \"requires-recent-login\",\n            // Resubmit after reauth flow\n            callback: () => onSubmit(data),\n          });\n        }else{\n\t\t\t\t\t// Set error status\n          props.onStatus({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n      .finally(() => {\n      \t// Hide pending indicator\n      \tsetPending(false);\n    \t});\n  };\n",
      "children": [
        {
          "type": "element",
          "tagName": "form",
          "id": 4767376,
          "attributes": "{\n  onSubmit: handleSubmit(onSubmit)\n}",
          "children": [
            {
              "type": "instance",
              "componentId": 2768808,
              "attributes": "{\n  name: 'name',\n  type: 'text',\n  label: 'Name',\n  defaultValue: auth.user.name,\n  placeholder: 'Name',\n\terror: errors.name,\n  inputRef: register({ \n    required: \"Please enter your name\"\n  })\n}",
              "id": 8954474,
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "name",
                  "value": "name",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "type",
                  "value": "text",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "label",
                  "value": "Name",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "defaultValue",
                  "value": "auth.user.name",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "placeholder",
                  "value": "Name",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "error",
                  "value": "errors.name",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "inputRef",
                  "value": "register({ \n  required: \"Please enter your name\"\n})",
                  "isString": false,
                  "type": "CallExpression"
                }
              ]
            },
            {
              "type": "instance",
              "componentId": 2768808,
              "attributes": "{\n  name: 'email',\n  type: 'email',\n  label: 'Email',\n  defaultValue: auth.user.email,\n  placeholder: 'Email',\n\terror: errors.email,\n  inputRef: register({ \n    required: \"Please enter your email\"\n  })\n}",
              "id": 1065409,
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "name",
                  "value": "email",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "type",
                  "value": "email",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "label",
                  "value": "Email",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "defaultValue",
                  "value": "auth.user.email",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "placeholder",
                  "value": "Email",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "error",
                  "value": "errors.email",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "inputRef",
                  "value": "register({ \n  required: \"Please enter your email\"\n})",
                  "isString": false,
                  "type": "CallExpression"
                }
              ]
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "field"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "control"
                  ],
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 8669042,
                      "attributes": "{\n\tparentColor: props.parentColor,\n  size: \"medium\",\n  state: pending ? \"loading\" : \"normal\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "Save",
                          "id": 2193483,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 7148024,
                      "isVisible": true,
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.parentColor",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "size",
                          "value": "medium",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "state",
                          "value": "pending ? \"loading\" : \"normal\"",
                          "isString": false,
                          "type": "ConditionalExpression"
                        }
                      ]
                    }
                  ],
                  "id": 701401,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 9859469,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "isVisible": true,
          "image": "",
          "name": "",
          "classNames": [],
          "classNameExpressions": [],
          "style": "",
          "propsArray": [
            {
              "key": "onSubmit",
              "value": "handleSubmit(onSubmit)",
              "isString": false,
              "type": "CallExpression"
            }
          ]
        }
      ],
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "SettingsGeneral",
      "nameStyleModule": "SettingsGeneral",
      "modulePath": "src/components/SettingsGeneral"
    },
    {
      "type": "component",
      "name": "Settings Password",
      "code": " \tconst auth = useAuth();\n\tconst [pending, setPending] = useState(false);\n\n  const { \n    register, \n    handleSubmit, \n    errors, \n    reset, \n    getValues \n  } = useForm();\n\n  const onSubmit = data => {\n    // Show pending indicator\n\t\tsetPending(true);\n    \n    auth\n      .updatePassword(data.pass)\n      .then(() => {\n      \t// Clear form\n        reset();\n \t\t\t\t// Set success status\n        props.onStatus({\n          type: \"success\",\n          message: \"Your password has been updated\",\n        });\n      })\n      .catch(error => {\n      \tif (error.code === \"auth/requires-recent-login\") {\n          // Update state to show re-authentication modal\n          props.onStatus({\n            type: \"requires-recent-login\",\n            // Resubmit after reauth flow\n            callback: () => onSubmit({ pass: data.pass }),\n          });\n        } else {\n          // Set error status\n          props.onStatus({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n    \t.finally(() => {\n      \t// Hide pending indicator\n      \tsetPending(false);\n    \t});\n  };\n",
      "children": [
        {
          "type": "element",
          "tagName": "form",
          "id": 3495348,
          "attributes": "{\n  onSubmit: handleSubmit(onSubmit)\n}",
          "children": [
            {
              "type": "instance",
              "componentId": 2768808,
              "attributes": "{\n  name: 'pass',\n  type: 'password',\n  label: 'Password',\n  placeholder: 'Password',\n\terror: errors.pass,\n  inputRef: register({ \n    required: \"Please enter a password\"\n  })\n}",
              "id": 6638149,
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "name",
                  "value": "pass",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "type",
                  "value": "password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "label",
                  "value": "Password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "placeholder",
                  "value": "Password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "error",
                  "value": "errors.pass",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "inputRef",
                  "value": "register({ \n  required: \"Please enter a password\"\n})",
                  "isString": false,
                  "type": "CallExpression"
                }
              ]
            },
            {
              "type": "instance",
              "componentId": 2768808,
              "attributes": "{\n  name: 'confirmpass',\n  type: 'password',\n  label: 'Confirm New Password',\n  placeholder: 'Confirm Password',\n\terror: errors.confirmPass,\n  inputRef: register({ \n    required: \"Please enter your new password again\",\n    validate: (value) => { \n      if (value === getValues().pass){\n        return true;\n      }else{\n        return \"This doesn't match your password\";\n      }\n    }\n  })\n}",
              "id": 5058408,
              "isVisible": true,
              "children": [],
              "propsArray": [
                {
                  "key": "name",
                  "value": "confirmpass",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "type",
                  "value": "password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "label",
                  "value": "Confirm New Password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "placeholder",
                  "value": "Confirm Password",
                  "isString": true,
                  "type": "StringLiteral"
                },
                {
                  "key": "error",
                  "value": "errors.confirmPass",
                  "isString": false,
                  "type": "MemberExpression"
                },
                {
                  "key": "inputRef",
                  "value": "register({ \n  required: \"Please enter your new password again\",\n  validate: (value) => { \n    if (value === getValues().pass){\n      return true;\n    }else{\n      return \"This doesn't match your password\";\n    }\n  }\n})",
                  "isString": false,
                  "type": "CallExpression"
                }
              ]
            },
            {
              "type": "element",
              "tagName": "div",
              "classNames": [
                "field"
              ],
              "children": [
                {
                  "type": "element",
                  "tagName": "div",
                  "classNames": [
                    "control"
                  ],
                  "children": [
                    {
                      "type": "instance",
                      "componentId": 8669042,
                      "attributes": "{\n\tparentColor: props.parentColor,\n  size: \"medium\",\n  state: pending ? \"loading\" : \"normal\"\n}",
                      "children": [
                        {
                          "type": "text",
                          "text": "Save",
                          "id": 7550972,
                          "isVisible": true,
                          "children": []
                        }
                      ],
                      "id": 8539041,
                      "isVisible": true,
                      "propsArray": [
                        {
                          "key": "parentColor",
                          "value": "props.parentColor",
                          "isString": false,
                          "type": "MemberExpression"
                        },
                        {
                          "key": "size",
                          "value": "medium",
                          "isString": true,
                          "type": "StringLiteral"
                        },
                        {
                          "key": "state",
                          "value": "pending ? \"loading\" : \"normal\"",
                          "isString": false,
                          "type": "ConditionalExpression"
                        }
                      ]
                    }
                  ],
                  "id": 7200851,
                  "isVisible": true,
                  "attributes": "{\n\n}",
                  "image": "",
                  "name": "",
                  "classNameExpressions": [],
                  "style": "",
                  "propsArray": []
                }
              ],
              "id": 6102654,
              "isVisible": true,
              "attributes": "{\n\n}",
              "image": "",
              "name": "",
              "classNameExpressions": [],
              "style": "",
              "propsArray": []
            }
          ],
          "isVisible": true,
          "image": "",
          "name": "",
          "classNames": [],
          "classNameExpressions": [],
          "style": "",
          "propsArray": [
            {
              "key": "onSubmit",
              "value": "handleSubmit(onSubmit)",
              "isString": false,
              "type": "CallExpression"
            }
          ]
        }
      ],
      "id": 9230145,
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "SettingsPassword",
      "nameStyleModule": "SettingsPassword",
      "modulePath": "src/components/SettingsPassword"
    },
    {
      "type": "component",
      "name": "Settings Billing",
      "code": " \tconst router = useRouter();\n\tconst auth = useAuth();\n\n\tuseEffect(() => {\n    if (auth.user.planIsActive){\n      // If user has an active plan then \n      // take them to Stripe billing\n    \tredirectToBilling();\n    }else{\n      // Otherwise go to pricing so they can\n      // purchase a plan\n      router.push('/pricing');\n    }\n  }, [auth.user.planId]);\n",
      "children": [
        {
          "type": "instance",
          "componentId": 9205860,
          "id": 424620,
          "attributes": "{\n\tstyle: {\n    height: \"100px\"\n  }\n}",
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "style",
              "value": "{\nheight: \"100px\"\n}",
              "isString": false,
              "type": "ObjectExpression"
            }
          ]
        }
      ],
      "id": 3911533,
      "isVisible": true,
      "nameLibrary": "",
      "description": "",
      "tags": [],
      "nameFormatted": "SettingsBilling",
      "nameStyleModule": "SettingsBilling",
      "modulePath": "src/components/SettingsBilling"
    },
    {
      "id": "app",
      "type": "component",
      "subtype": "app-component",
      "globalStyle": "// COLORS\n$primary: #00d1b2;\n$info: #209CEE;\n$success: #23D160;\n$warning: #FFDD57;\n$danger: #FF3860;\n$light: #F5F5F5;\n$dark: #363636;\n\n// TEXT\n$text: #4A4A4A;\n$link: #3273DC;\n$body-family: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n$title-family: false;\n$button-family: false;\n\n// BREAKPOINTS\n$gap: 32px;\n$tablet: 769px;\n$desktop: 960px + (2*$gap);\n$widescreen: 1152px + (2*$gap);\n$fullhd: 1344px + (2*$gap);\n$widescreen-enabled: true;\n$fullhd-enabled: false;\n\n// LAYOUT\n$section-padding: 3rem 1.5rem;\n$section-padding-medium: 6rem 1.5rem;\n$section-padding-large: 9rem 1.5rem;\n\n// SPACING HELPERS (.mt-3, .mx-auto, .p-5, etc)\n$spacing-shortcuts: (\"margin\": \"m\", \"padding\": \"p\");\n$spacing-directions: (\"top\": \"t\", \"right\": \"r\", \"bottom\": \"b\", \"left\": \"l\");\n$spacing-horizontal: \"x\";\n$spacing-vertical: \"y\";\n$spacing-values: (\"0\": 0, \"1\": 0.25rem, \"2\": 0.5rem, \"3\": 1rem, \"4\": 1.5rem, \"5\": 3rem, \"auto\": auto);\n\n// SEE DOCS FOR MORE: \n// https://bit.ly/30UvE5O\n\n// IMPORT BULMA\n@import \"~bulma/bulma.sass\";",
      "children": [
        {
          "type": "instance",
          "componentId": 9215568,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n  color: \"white\",\n  // add extra padding\n  spaced: true,\n  // logo image url\n  logo: 'https://uploads.divjoy.com/logo.svg'\n}",
          "id": 2069132,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "white",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "spaced",
              "value": "true",
              "isString": false,
              "type": "BooleanLiteral"
            },
            {
              "key": "logo",
              "value": "https://uploads.divjoy.com/logo.svg",
              "isString": true,
              "type": "StringLiteral"
            }
          ]
        },
        {
          "type": "pages",
          "id": 994453,
          "isVisible": true,
          "children": [
            {
              "type": "instance",
              "subtype": "page-instance",
              "componentId": 1513260,
              "id": 5876810,
              "isVisible": true,
              "children": []
            },
            {
              "type": "instance",
              "subtype": "page-instance",
              "componentId": 9447965,
              "id": 9711986,
              "isVisible": true,
              "children": []
            },
            {
              "type": "instance",
              "subtype": "page-instance",
              "componentId": 5039911,
              "id": 4693207,
              "isVisible": true,
              "children": []
            },
            {
              "type": "instance",
              "subtype": "page-instance",
              "componentId": 1594565,
              "id": 3993905,
              "isVisible": true,
              "children": []
            }
          ]
        },
        {
          "type": "instance",
          "componentId": 203216,
          "attributes": "{\n  // primary, link, info, success, warning, \n  // danger, white, light, dark, black\n\tcolor: \"light\",\n  // normal, medium, large\n  size: \"normal\",\n  // Background image URL\n  backgroundImage: \"\",\n  // Background image opacity (0-1)\n  backgroundImageOpacity: 1,\n\t// Text content\n  copyright: '© 2019 Company',\n  // Logo image URL\n  logo: 'https://uploads.divjoy.com/logo.svg'\n}",
          "id": 9281365,
          "isVisible": true,
          "children": [],
          "propsArray": [
            {
              "key": "color",
              "value": "light",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "size",
              "value": "normal",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImage",
              "value": "",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "backgroundImageOpacity",
              "value": "1",
              "isString": false,
              "type": "NumericLiteral"
            },
            {
              "key": "copyright",
              "value": "© 2019 Company",
              "isString": true,
              "type": "StringLiteral"
            },
            {
              "key": "logo",
              "value": "https://uploads.divjoy.com/logo.svg",
              "isString": true,
              "type": "StringLiteral"
            }
          ]
        }
      ],
      "isVisible": true,
      "code": "",
      "nameFormatted": "MyApp",
      "nameStyleModule": "MyApp",
      "modulePath": "src/pages/_app"
    }
  ]
}